func sum({}) return 0;
func sum(x:xs) return x + sum(xs);

func main() {
    print(sum({1, 2, 3})); // 6
}

============

local function sum(xs)
    if (#xs == 0) then
        return 0;
    end
    local x = table.remove(xs)
    return x + sum(xs)
end

print(sum)

============

-- BYTECODE -- sum.lua:1-7                  |   [0] = xs;
0001    LEN      1   0                      |   [1] = len([0]); // len(xs)
0002    ISNEN    1   0      ; 0             |   if ([1] != 0)
0003    JMP      1 => 0006                  |       skip(2); 
0004    KSHORT   1   0                      |   [1] = 0;
0005    RET1     1   2                      |   return [1]; // return 0
0006 => GGET     1   0      ; "table"       |   [1] = getGlobal(konstant(0));
0007    TGETS    1   1   1  ; "remove"      |   [1] = getField([1], konstant(1)); // table.remove
0008    MOV      2   0                      |   [2] = [0]; // xs
0009    KSHORT   3   1                      |   [3] = 1;
0010    CALL     1   2   3                  |   [1] = [1]([2],[3]); // table.remove(xs, 1)
0011    UGET     2   0      ; sum           |   [2] = getUpval(0); // sum
0012    MOV      3   0                      |   [3] = [0] // xs
0013    CALL     2   2   2                  |   [2] = [2]([3]); // sum(xs)
0014    ADDVV    2   1   2                  |   [2] = [1] + [2];
0015    RET1     2   2                      |   return [2];

-- BYTECODE -- howto.lua:0-10
0001    FNEW     0   0      ; howto.lua:1   |   [0] = getFunc(0); // sum
0002    TDUP     1   1                      |   [1] = konstantTable(1);
0003    GGET     2   2      ; "print"       |   [2] = konstant(2);
0004    MOV      3   0                      |   [3] = [0]; // sum
0005    MOV      4   1                      |   [4] = [1]; // _tmp = {10, 3, 7, 12}
0006    CALL     3   0   2                  |   [3] = [3]([2]); // _tmp = sum(_tmp)
0007    CALLM    2   1   0                  |   [2] = [2]([3]); // print(_tmp)
0008    UCLO     0 => 0009                  |   closeUpvals(> 0); skip(0);
0009 => RET0     0   1                      |   return; 
